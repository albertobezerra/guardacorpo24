plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
} else {
    println "local.properties file not found: ${localPropertiesFile}"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    namespace = "equipebezerradasilva.guardacorpo"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "equipebezerradasilva.guardacorpo"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = 32 // Defina aqui diretamente
        versionName = '4.0.0' // Defina aqui diretamente
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
            ndk {
                debugSymbolLevel = 'FULL' // Adicionado para gerar símbolos de depuração
            }
        }
    }
}

flutter {
    source = "../.."
}

println "Flutter Version Code: ${android.defaultConfig.versionCode}"
println "Flutter Version Name: ${android.defaultConfig.versionName}"
